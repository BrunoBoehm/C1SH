/* # Mixins
-----------------------------------------------------------------------*/

/* # Typography */

@mixin font-size($sizeValue: 2.0) {
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
    // if rem is supported, it will override px
  }


/* # Gradient */

@mixin overlay {
    position: relative;
    * {
        position: relative;
        z-index: 1;
    }
    &:after {
        content: " ";
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: rgba(0,0,0, 0.15);
    }
}

/* # Media Queries */

@mixin breakpoint( $breakpoint) {
    @if map-has-key( $breakpoints, $breakpoint) {
        @media ( min-width: #{ map-get( $breakpoints, $breakpoint ) }) {
            @content;
        }
    }
    @else if type_of( $breakpoint)==number and unit( $breakpoint)==px or unit( $breakpoint)==em or unit( $breakpoint)==rem {
        @media (min-width: $breakpoint) {
            @content;
        }
    }
    @else {
        @warn "Unfortunately no value could be retrieved from `#{$breakpoint}`. "+"Please make sure it is defined in `$breakpoints` map, or it is a valid number with supported unit of px, em or rem.";
    }
}